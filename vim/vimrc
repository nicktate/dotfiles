"""""""""""""""""""""""""""""""""""""""""""""""
" Maintainer: Nicholas Tate <ntate22@gmail.com>
"""""""""""""""""""""""""""""""""""""""""""""""

""" General
" vIM Improved Mode
set nocompatible
filetype off

" BEGIN --- Vundle
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'sjl/gundo.vim'

call vundle#end()
filetype plugin indent on
" END --- Vundle

" Map leader to `,`
let mapleader=","

" jk is escape
inoremap jk <esc>

" Sets how many lines of history VIM has to remember
set history=700

" Fast saving
nmap <leader>w :w!<cr>

" Turn on solarized dark color scheme for vim
syntax enable
set background=dark
colorscheme gruvbox

" Default 4 spaces when viewing and creating tabs
set tabstop=4
set softtabstop=4
set expandtab

" Show line numbers
set number

" Show last command entered at bottom of screen
set showcmd

" Show visual autocomplete menu for command line
set wildmenu

" Only redraw screen when necessary (faster macros)
set lazyredraw

" Highlight matching closures
set showmatch

" Search as you type and highlight matches
set incsearch
set hlsearch

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" toggle gundo
nnoremap <leader>u :GundoToggle<CR>

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" allows cursor change in tmux mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" strip trailing whitespace
autocmd BufWritePre * :%s/\s\+$//e

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines


" Height of the command bar
set cmdheight=2

" Always show current position
set ruler

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac

""""""""""""""""""""""""""""""
" => Status line
""""""""""""""""""""""""""""""
" Always show the status line
set laststatus=2

" Format the status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%

" Returns true if paste mode is enabled
function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    en
    return ''
endfunction
